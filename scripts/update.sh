#!/bin/bash

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ telegram-shop-bot –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/update.sh

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

cd "$PROJECT_ROOT"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Telegram Shop Bot...${NC}\n"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [ ! -d ".git" ]; then
    echo -e "${RED}‚ùå –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
BACKUPS_DIR="$PROJECT_ROOT/backups"
mkdir -p "$BACKUPS_DIR"
BACKUP_DIR="$BACKUPS_DIR/config_backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

echo -e "${BLUE}üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
if [ -f ".env" ]; then
    cp .env "$BACKUP_DIR/"
    echo -e "  ${GREEN}‚úÖ .env —Å–æ—Ö—Ä–∞–Ω–µ–Ω${NC}"
fi
if [ -f "app/texts.yml" ]; then
    cp app/texts.yml "$BACKUP_DIR/"
    echo -e "  ${GREEN}‚úÖ app/texts.yml —Å–æ—Ö—Ä–∞–Ω–µ–Ω${NC}"
fi

# –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
echo -e "${BLUE}üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...${NC}"
git fetch origin

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
CURRENT=$(git rev-parse HEAD)
REMOTE=$(git rev-parse origin/main)

if [ "$CURRENT" != "$REMOTE" ]; then
    echo -e "${BLUE}üìã –ù–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:${NC}"
    git log HEAD..origin/main --oneline --graph --decorate
    echo ""
    read -p "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è? [Y/n] " -n 1 -r
    echo
    
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        echo -e "${BLUE}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
        if command -v docker-compose &> /dev/null; then
            docker-compose down
        else
            docker compose down
        fi
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        REPO_URL=$(git config --get remote.origin.url)
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∫—Ä–æ–º–µ backups –∏ uploads
        echo -e "${BLUE}üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (—Å–æ—Ö—Ä–∞–Ω—è–µ–º backups –∏ uploads)...${NC}"
        find . -maxdepth 1 ! -name '.' ! -name '..' ! -name 'backups' ! -name 'uploads' -exec rm -rf {} + 2>/dev/null || true
        
        # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∑–∞–Ω–æ–≤–æ
        echo -e "${BLUE}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–µ–∂–µ–π –≤–µ—Ä—Å–∏–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
        git clone "$REPO_URL" temp_clone
        
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ temp_clone –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        echo -e "${BLUE}üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤...${NC}"
        mv temp_clone/.git .
        mv temp_clone/* . 2>/dev/null || true
        mv temp_clone/.* . 2>/dev/null || true
        rm -rf temp_clone
        
        echo -e "${GREEN}‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω${NC}"
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        echo -e "${BLUE}‚ôªÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
        
        if [ -f "$BACKUP_DIR/.env" ]; then
            cp "$BACKUP_DIR/.env" .env
            echo -e "  ${GREEN}‚úÖ .env –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            echo -e "  ${YELLOW}‚ö†Ô∏è –ë—ç–∫–∞–ø .env –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        fi
        
        if [ -f "$BACKUP_DIR/texts.yml" ]; then
            cp "$BACKUP_DIR/texts.yml" app/texts.yml
            echo -e "  ${GREEN}‚úÖ texts.yml –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        else
            echo -e "  ${YELLOW}‚ö†Ô∏è –ë—ç–∫–∞–ø texts.yml –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        fi
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        echo ""
        read -p "–ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã? [Y/n] " -n 1 -r
        echo
        
        if [[ ! $REPLY =~ ^[Nn]$ ]]; then
            if command -v docker-compose &> /dev/null; then
                docker-compose build
                docker-compose up -d
            else
                docker compose build
                docker compose up -d
            fi
            echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
            echo "   docker compose build"
            echo "   docker compose up -d"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ –£–∂–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏${NC}"
fi

echo ""
echo -e "${BLUE}üìã –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤:${NC}"
echo "   $BACKUP_DIR"
